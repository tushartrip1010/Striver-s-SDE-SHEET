#1
class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        r=len(matrix)
        c=len(matrix[0])
        row,col=set(),set()
       
           def setZeroes(self, matrix: List[List[int]]) -> None:

        zero=[]
        
        # finding zero
        for i in range(len(matrix)):
            for j in range(len(matrix[0])):
                if matrix[i][j]==0:
                    zero.append([i,j])
        
        # replacing rows with zeros
        for x in zero:
            for i in range(len(matrix)):
                matrix[i][x[]]=0
                
        # replacing columns with zero
        for x in zero:
            for i in range(len(matrix[0])):
                matrix[x[0]][i]=0
        for i in range(r):
            for j in range(c):
                if matrix[i][j]==0:
                    row.add(i)
                    col.add(j)
        for i in range(r):
            for j in range(c):
                if i in row or j in col:
                    matrix[i][j]=0
#2
    def setZeroes(self, matrix: List[List[int]]) -> None:

        zero=[]
        
        # finding zero
        for i in range(len(matrix)):
            for j in range(len(matrix[0])):
                if matrix[i][j]==0:
                    zero.append([i,j])
        
        # replacing rows with zeros
        for x in zero:
            for i in range(len(matrix)):
                matrix[i][x[]]=0
                
        # replacing columns with zero
        for x in zero:
            for i in range(len(matrix[0])):
                matrix[x[0]][i]=0
